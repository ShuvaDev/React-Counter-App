{"version":3,"sources":["counter/component/nav.jsx","counter/component/header.jsx","counter/component/cart.jsx","counter/index.jsx","app.jsx","serviceWorker.js","index.js"],"names":["Nav","props","className","totalElement","Header","onSubmit","handleSubmit","type","placeholder","name","onClick","reset","Cart","counters","map","item","index","title","deleteItem","bind","value","decreament","increament","Counter","state","count","forEach","val","i","setState","filter","event","preventDefault","target","item_name","this","Fragment","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cd6b9bed.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Nav = (props) => (\r\n    <nav className='nav navbar navbar-light bg-light'>\r\n        <a className=\"navbar-brand text-secondary mb-0\">\r\n            Your Total Element\r\n            <span className=\"badge badge-pill badge-warning ml-2\">{props.totalElement()}</span>\r\n        </a>\r\n    </nav>\r\n)\r\n\r\nexport default Nav","import React from 'react'\r\nconst Header = (props) => (\r\n    <div className=\"card\">\r\n        <div className=\"card-body shadow-lg\">\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <form onSubmit={props.handleSubmit}>\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" className=\"form-control\" placeholder='Enter your item name' name='item_name'/>\r\n                            <div className=\"input-group-append\">\r\n                                <button className='btn btn-secondary'>Add Item</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-3\" onClick={props.reset}>\r\n                    <button className=\"btn btn-primary\">Reset</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Cart = (props) => (\r\n    <div className=\"row\">\r\n        {props.counters.map((item, index) => (\r\n            <div className=\"col-lg-4 mt-3\">\r\n                <div className=\"card shadow-lg\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"d-flex justify-content-between align-item-center border-bottom pb-3 mb-5\">\r\n                            <h4 className=\"d-inline-block\">Item #{item.title} </h4>\r\n                            <button onClick={props.deleteItem.bind(this, index)} className=\"btn btn-danger btn-sm\">Delete</button>\r\n                        </div>\r\n                        {item.value ? <span className=\"badge m-3 p-2 badge-primary\">{item.value}</span>: <span className=\"badge m-3 p-2 badge-warning\">Zero</span>}\r\n                        \r\n                        <button onClick={props.decreament.bind(this, index)} className=\"btn btn-dark btn-sm mr-2\">Decriment</button>\r\n                        <button onClick={props.increament.bind(this, index)} className=\"btn btn-info btn-sm\">Increament</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))}\r\n        </div>\r\n)\r\n\r\nexport default Cart","import React from 'react'\r\nimport Nav from './component/nav'\r\nimport Header from './component/header'\r\nimport Cart from './component/cart'\r\n\r\nclass Counter extends React.Component {\r\n    state = {\r\n        counters: [\r\n            {title: 1, value: 0},\r\n            {title: 2, value: 3},\r\n            {title: 3, value: 5},\r\n            {title: 4, value: 8}\r\n        ]\r\n    }\r\n    totalElement = () => {\r\n        let count = 0\r\n        this.state.counters.forEach((item) => {\r\n            if(item.value) {\r\n                count = count + 1\r\n            }\r\n        })\r\n        return count\r\n    }\r\n    increament = (index) => {\r\n        let counters = this.state.counters.map((val, i) => {\r\n            if(i == index) {\r\n                val.value += 1\r\n            }\r\n            return val\r\n        })\r\n        this.setState({counters})\r\n    }\r\n    decreament = (index) => {\r\n        let counters = this.state.counters.map((val, i) => {\r\n            if(i == index) {\r\n                if(val.value > 0) {\r\n                    val.value -= 1\r\n                }\r\n            }\r\n            return val\r\n        })\r\n        this.setState({counters})\r\n    }\r\n    deleteItem = (index) => {\r\n        let counters = this.state.counters.filter((val, i) => {\r\n            return i!=index\r\n        })\r\n        this.setState({counters})\r\n    } \r\n    reset = () => {\r\n        let counters = this.state.counters.map((val, i) => {\r\n            val.value = 0\r\n            return val\r\n        })\r\n        this.setState({counters})\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        let name = event.target.item_name.value\r\n        this.setState({\r\n            counters: [...this.state.counters, {title: name, value: 0}]\r\n        })\r\n        event.target.reset()\r\n    } \r\n    render() {\r\n        const {counters} = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <Nav totalElement={this.totalElement}/>\r\n                <main className=\"container my-5\">\r\n                    <Header \r\n                        handleSubmit={this.handleSubmit}\r\n                        reset={this.reset}\r\n                    />                   \r\n                    <Cart \r\n                        counters={counters}\r\n                        deleteItem={this.deleteItem}\r\n                        increament={this.increament}\r\n                        decreament={this.decreament}\r\n                    />\r\n                </main>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Counter","import React from 'react'\r\nimport Counter from './counter'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Counter/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}